#Sample docker compose file for the dockjob image.
# this shows how to run dockjob using kong to make it https and have basic-auth provided by kong
#
#note: it is recommended you change :latest to a specific version number

#TODO Change to reading hostname as a docker secret

version: "3.1"

secrets:
  webservices_cert:
    external: true
  webservices_key:
    external: true

services:
  kong-database:
    image: postgres:9.6
    deploy:
      restart_policy:
        condition: any
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:1.1.2
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    command: kong migrations bootstrap
    deploy:
      restart_policy:
        condition: on-failure

  kong:
    image: kong:1.1.2
    deploy:
      restart_policy:
        condition: on-failure
    secrets:
     - webservices_cert
     - webservices_key
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_SSL_CERT=/run/secrets/webservices_cert
      - KONG_SSL_CERT_KEY=/run/secrets/webservices_key
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      # - 80:8000 Activate for debugging
      - 443:8443
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10

  kong-configure:
    image: metcarob/docker-ws-caller:0.5.1
    deploy:
      restart_policy:
        condition: on-failure
        delay: 6s
    entrypoint: "/bin/sh"
    command:    "-c \" \
                 (curl -i -X POST \
                   --url http://kong:8001/consumers/ \
                   --data 'username=sampleuser' ) && \
                 (curl -i -X POST \
                   --url http://kong:8001/consumers/sampleuser/basic-auth \
                   --data 'username=sampleuser'  \
                   --data 'password=sampleuser' ) && \
                 (curl -i -X POST \
                   --url http://kong:8001/consumers/sampleuser/acls \
                   --data 'group=samplegroup' ) && \
                 (curl -i -X POST \
                   --url http://kong:8001/plugins/ \
                   --data 'name=cors' \
                   --data 'config.origins=*' )
                \""

  dockjob:
    image: metcarob/dockjob:latest
    environment:
      - APIAPP_APIURL=${EXTURL}:${EXTPORT}/dockjobapi
      - APIAPP_APIDOCSURL=${EXTURL}:${EXTPORT}/dockjobapidocs
      - APIAPP_FRONTENDURL=${EXTURL}:${EXTPORT}/dockjob
      - "APIAPP_APIACCESSSECURITY=[{ \"type\": \"basic-auth\" }]"
    deploy:
      restart_policy:
        condition: any

  kong-addapis-dockjob:
    #Add API's to kong to forward requests to dockjob
    # also configure basic-auth so that only users in group samplegroup can access
    image: metcarob/docker-ws-caller:0.5.1
    deploy:
      restart_policy:
        condition: on-failure
        delay: 6s
    entrypoint: "/bin/sh"
    command:    "-c \" \
                   (kong_install_service_and_route http://kong:8001 dockjobapi http dockjob 80 \\\"/api\\\" https \\\"\\\" /dockjobapi \\\"\\\" null null) && \
                   (kong_install_service_and_route http://kong:8001 dockjobapidocs http dockjob 80 \\\"/apidocs\\\" https \\\"\\\" /dockjobapidocs \\\"\\\" null null) && \
                   (kong_install_service_and_route http://kong:8001 dockjob http dockjob 80 \\\"/frontend\\\" https \\\"\\\" /dockjob \\\"\\\" null null) && \
                   (curl -i -X POST \
                     --url http://kong:8001/services/dockjobapi/plugins \
                     --data 'name=acl' \
                     --data 'config.whitelist=samplegroup' \
                    ) && \
                   (curl -i -X POST \
                     --url http://kong:8001/services/dockjobapi/plugins/ \
                     --data 'name=basic-auth' \
                     --data 'config.hide_credentials=true') \
                \""


#                   (kong_install_service_and_route http://kong:8001 dockjobapi http dockjob 80 \\\"/api\\\" https dockjob /dockjobapi \\\"\\\" null null) && \
#                   (kong_install_service_and_route http://kong:8001 dockjobapidocs http dockjob 80 \\\"/apidocs\\\" https dockjob /dockjobapidocs \\\"\\\" null null) && \
#                   (kong_install_service_and_route http://kong:8001 dockjob http dockjob 80 \\\"/frontend\\\" https dockjob /dockjob \\\"\\\" null null) \

#KONG_URL=${1}
#SERVICE_NAME=${2}
#SERVICE_PROTOCOL=${3}
#SERVICE_HOST=${4}
#SERVICE_PORT=${5}
#SERVICE_PATH=${6}
#ROUTE_PROTOCOLS=${7}
#ROUTE_HOSTS=${8}
#ROUTE_PATHS=${9}
#ROUTE_METHODS=${10}
#ROUTE_STRIP_PATH=${11}
#ROUTE_PRESERVE_HOST=${12}

##The next section starts a UI for kong called konga. 
##We only need a ui for development experimentation and can be removed if no UI is required
## when it is running it can be accessed on port 1337
  konga:
    image: pantsel/konga:0.14.1
    deploy:
      restart_policy:
        condition: on-failure
    ports:
     - 1337:1337

# docker stack deploy --compose-file=docker-compose-https-basic-auth.yml dockjob-https-basic-auth
